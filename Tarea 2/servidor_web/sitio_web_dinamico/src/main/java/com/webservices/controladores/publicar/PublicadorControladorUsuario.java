
package com.webservices.controladores.publicar;

import jakarta.jws.WebMethod;
import jakarta.jws.WebParam;
import jakarta.jws.WebResult;
import jakarta.jws.WebService;
import jakarta.jws.soap.SOAPBinding;
import jakarta.xml.bind.annotation.XmlSeeAlso;
import jakarta.xml.ws.Action;
import jakarta.xml.ws.FaultAction;


/**
 * This class was generated by the XML-WS Tools.
 * XML-WS Tools 4.0.0
 * Generated source version: 3.0
 * 
 */
@WebService(name = "PublicadorControladorUsuario", targetNamespace = "http://publicar.controladores/")
@SOAPBinding(style = SOAPBinding.Style.RPC)
@XmlSeeAlso({
    ObjectFactory.class
})
public interface PublicadorControladorUsuario {


    /**
     * 
     * @return
     *     returns publicar.WrapperArrayList
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicar.controladores/PublicadorControladorUsuario/getDataPostulanteRequest", output = "http://publicar.controladores/PublicadorControladorUsuario/getDataPostulanteResponse")
    public WrapperArrayList getDataPostulante();

    /**
     * 
     * @return
     *     returns publicar.WrapperArrayList
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicar.controladores/PublicadorControladorUsuario/getDataTipoPublicacionRequest", output = "http://publicar.controladores/PublicadorControladorUsuario/getDataTipoPublicacionResponse")
    public WrapperArrayList getDataTipoPublicacion();

    /**
     * 
     * @param arg0
     * @param arg1
     * @param arg2
     * @param arg3
     * @param arg4
     * @param arg5
     * @param arg6
     * @param arg7
     * @throws CampoInvalidoException_Exception
     * @throws EmailYaExisteException_Exception
     * @throws NicknameYaExisteException_Exception
     */
    @WebMethod
    @Action(input = "http://publicar.controladores/PublicadorControladorUsuario/altaUsuarioPostulanteRequest", output = "http://publicar.controladores/PublicadorControladorUsuario/altaUsuarioPostulanteResponse", fault = {
        @FaultAction(className = NicknameYaExisteException_Exception.class, value = "http://publicar.controladores/PublicadorControladorUsuario/altaUsuarioPostulante/Fault/NicknameYaExisteException"),
        @FaultAction(className = EmailYaExisteException_Exception.class, value = "http://publicar.controladores/PublicadorControladorUsuario/altaUsuarioPostulante/Fault/EmailYaExisteException"),
        @FaultAction(className = CampoInvalidoException_Exception.class, value = "http://publicar.controladores/PublicadorControladorUsuario/altaUsuarioPostulante/Fault/campoInvalidoException")
    })
    public void altaUsuarioPostulante(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        String arg2,
        @WebParam(name = "arg3", partName = "arg3")
        String arg3,
        @WebParam(name = "arg4", partName = "arg4")
        String arg4,
        @WebParam(name = "arg5", partName = "arg5")
        String arg5,
        @WebParam(name = "arg6", partName = "arg6")
        byte[] arg6,
        @WebParam(name = "arg7", partName = "arg7")
        String arg7)
        throws CampoInvalidoException_Exception, EmailYaExisteException_Exception, NicknameYaExisteException_Exception
    ;

    /**
     * 
     * @return
     *     returns publicar.WrapperArrayList
     * @throws UsuarioNoExisteException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicar.controladores/PublicadorControladorUsuario/getDataUsuariosRequest", output = "http://publicar.controladores/PublicadorControladorUsuario/getDataUsuariosResponse", fault = {
        @FaultAction(className = UsuarioNoExisteException_Exception.class, value = "http://publicar.controladores/PublicadorControladorUsuario/getDataUsuarios/Fault/UsuarioNoExisteException")
    })
    public WrapperArrayList getDataUsuarios()
        throws UsuarioNoExisteException_Exception
    ;

    /**
     * 
     * @param arg0
     * @param arg1
     * @param arg2
     * @param arg3
     * @param arg4
     * @param arg5
     * @param arg6
     * @param arg7
     * @throws CampoInvalidoException_Exception
     * @throws EmailYaExisteException_Exception
     * @throws NicknameYaExisteException_Exception
     */
    @WebMethod
    @Action(input = "http://publicar.controladores/PublicadorControladorUsuario/altaUsuarioEmpresaRequest", output = "http://publicar.controladores/PublicadorControladorUsuario/altaUsuarioEmpresaResponse", fault = {
        @FaultAction(className = NicknameYaExisteException_Exception.class, value = "http://publicar.controladores/PublicadorControladorUsuario/altaUsuarioEmpresa/Fault/NicknameYaExisteException"),
        @FaultAction(className = EmailYaExisteException_Exception.class, value = "http://publicar.controladores/PublicadorControladorUsuario/altaUsuarioEmpresa/Fault/EmailYaExisteException"),
        @FaultAction(className = CampoInvalidoException_Exception.class, value = "http://publicar.controladores/PublicadorControladorUsuario/altaUsuarioEmpresa/Fault/campoInvalidoException")
    })
    public void altaUsuarioEmpresa(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        String arg2,
        @WebParam(name = "arg3", partName = "arg3")
        String arg3,
        @WebParam(name = "arg4", partName = "arg4")
        String arg4,
        @WebParam(name = "arg5", partName = "arg5")
        String arg5,
        @WebParam(name = "arg6", partName = "arg6")
        byte[] arg6,
        @WebParam(name = "arg7", partName = "arg7")
        String arg7)
        throws CampoInvalidoException_Exception, EmailYaExisteException_Exception, NicknameYaExisteException_Exception
    ;

    /**
     * 
     * @return
     *     returns publicar.WrapperArrayList
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicar.controladores/PublicadorControladorUsuario/getDataKeyWordRequest", output = "http://publicar.controladores/PublicadorControladorUsuario/getDataKeyWordResponse")
    public WrapperArrayList getDataKeyWord();

    /**
     * 
     * @param arg0
     * @return
     *     returns publicar.WrapperHashMap
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicar.controladores/PublicadorControladorUsuario/obtenerOfertarDeEmpresaRequest", output = "http://publicar.controladores/PublicadorControladorUsuario/obtenerOfertarDeEmpresaResponse")
    public WrapperHashMap obtenerOfertarDeEmpresa(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg0
     * @param arg1
     * @param arg2
     * @param arg3
     * @param arg4
     * @param arg5
     * @param arg6
     * @param arg7
     */
    @WebMethod
    @Action(input = "http://publicar.controladores/PublicadorControladorUsuario/modificarDatosEmpresaRequest", output = "http://publicar.controladores/PublicadorControladorUsuario/modificarDatosEmpresaResponse")
    public void modificarDatosEmpresa(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        String arg2,
        @WebParam(name = "arg3", partName = "arg3")
        String arg3,
        @WebParam(name = "arg4", partName = "arg4")
        String arg4,
        @WebParam(name = "arg5", partName = "arg5")
        String arg5,
        @WebParam(name = "arg6", partName = "arg6")
        byte[] arg6,
        @WebParam(name = "arg7", partName = "arg7")
        String arg7);

    /**
     * 
     * @param arg0
     * @return
     *     returns publicar.WrapperArrayList
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicar.controladores/PublicadorControladorUsuario/getDataOfertasDeEmpresaRequest", output = "http://publicar.controladores/PublicadorControladorUsuario/getDataOfertasDeEmpresaResponse")
    public WrapperArrayList getDataOfertasDeEmpresa(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg0
     * @param arg1
     * @throws YaExistePostulacionAOfertaException_Exception
     */
    @WebMethod
    @Action(input = "http://publicar.controladores/PublicadorControladorUsuario/agregarPostulacionAPostulanteRequest", output = "http://publicar.controladores/PublicadorControladorUsuario/agregarPostulacionAPostulanteResponse", fault = {
        @FaultAction(className = YaExistePostulacionAOfertaException_Exception.class, value = "http://publicar.controladores/PublicadorControladorUsuario/agregarPostulacionAPostulante/Fault/yaExistePostulacionAOfertaException")
    })
    public void agregarPostulacionAPostulante(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        Postulacion arg1)
        throws YaExistePostulacionAOfertaException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns publicar.WrapperArrayList
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicar.controladores/PublicadorControladorUsuario/getPublicacionesEmpresaRequest", output = "http://publicar.controladores/PublicadorControladorUsuario/getPublicacionesEmpresaResponse")
    public WrapperArrayList getPublicacionesEmpresa(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns publicar.WrapperArrayList
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicar.controladores/PublicadorControladorUsuario/obtenerPostulacionesRequest", output = "http://publicar.controladores/PublicadorControladorUsuario/obtenerPostulacionesResponse")
    public WrapperArrayList obtenerPostulaciones(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg0
     * @param arg1
     * @param arg2
     * @param arg3
     * @param arg4
     * @param arg5
     * @param arg6
     * @param arg7
     */
    @WebMethod
    @Action(input = "http://publicar.controladores/PublicadorControladorUsuario/modificarDatosPostulanteRequest", output = "http://publicar.controladores/PublicadorControladorUsuario/modificarDatosPostulanteResponse")
    public void modificarDatosPostulante(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        String arg2,
        @WebParam(name = "arg3", partName = "arg3")
        String arg3,
        @WebParam(name = "arg4", partName = "arg4")
        String arg4,
        @WebParam(name = "arg5", partName = "arg5")
        String arg5,
        @WebParam(name = "arg6", partName = "arg6")
        byte[] arg6,
        @WebParam(name = "arg7", partName = "arg7")
        String arg7);

    /**
     * 
     * @param arg0
     * @param arg1
     */
    @WebMethod
    @Action(input = "http://publicar.controladores/PublicadorControladorUsuario/comprarPaqueteRequest", output = "http://publicar.controladores/PublicadorControladorUsuario/comprarPaqueteResponse")
    public void comprarPaquete(
        @WebParam(name = "arg0", partName = "arg0")
        Paquete arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1);

    /**
     * 
     * @param arg0
     * @return
     *     returns publicar.DataUsuario
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicar.controladores/PublicadorControladorUsuario/listarInfoUserRequest", output = "http://publicar.controladores/PublicadorControladorUsuario/listarInfoUserResponse")
    public DataUsuario listarInfoUser(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

}
